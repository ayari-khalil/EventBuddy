package dev.flonixa.com.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GridToolbarItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridToolbarItemAllPropertiesEquals(GridToolbarItem expected, GridToolbarItem actual) {
        assertGridToolbarItemAutoGeneratedPropertiesEquals(expected, actual);
        assertGridToolbarItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridToolbarItemAllUpdatablePropertiesEquals(GridToolbarItem expected, GridToolbarItem actual) {
        assertGridToolbarItemUpdatableFieldsEquals(expected, actual);
        assertGridToolbarItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridToolbarItemAutoGeneratedPropertiesEquals(GridToolbarItem expected, GridToolbarItem actual) {
        assertThat(actual)
            .as("Verify GridToolbarItem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridToolbarItemUpdatableFieldsEquals(GridToolbarItem expected, GridToolbarItem actual) {
        assertThat(actual)
            .as("Verify GridToolbarItem relevant properties")
            .satisfies(a -> assertThat(a.getLocation()).as("check location").isEqualTo(expected.getLocation()))
            .satisfies(a -> assertThat(a.getWidget()).as("check widget").isEqualTo(expected.getWidget()))
            .satisfies(a -> assertThat(a.getIcon()).as("check icon").isEqualTo(expected.getIcon()))
            .satisfies(a -> assertThat(a.getText()).as("check text").isEqualTo(expected.getText()))
            .satisfies(a -> assertThat(a.getHint()).as("check hint").isEqualTo(expected.getHint()))
            .satisfies(a -> assertThat(a.getOnClickAction()).as("check onClickAction").isEqualTo(expected.getOnClickAction()))
            .satisfies(a -> assertThat(a.getVisible()).as("check visible").isEqualTo(expected.getVisible()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGridToolbarItemUpdatableRelationshipsEquals(GridToolbarItem expected, GridToolbarItem actual) {
        assertThat(actual)
            .as("Verify GridToolbarItem relationships")
            .satisfies(a -> assertThat(a.getGridConfiguration()).as("check gridConfiguration").isEqualTo(expected.getGridConfiguration()));
    }
}
